{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","key","src","alt","GifGrid","loading","state","setstate","useEffect","setTimeout","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,OAQd,2BACIO,KAAM,OACNC,YAAY,iBACZC,MAAQV,EACRW,SApBc,SAACR,GACvBF,EAAeE,EAAES,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAECI,MAAMF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAQD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QATxB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAK,CAACN,KAAIC,QAAOV,QAErB,yBAAMgB,UAAU,QACR,yBACIC,IAAOR,EACPS,IAAOlB,EACPmB,IAAOT,EACPA,MAAQA,IAEZ,+BAAKA,EAAL,OCRHU,EAAU,SAAC,GAAmB,IAAhBtB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EACZf,mBAAS,CAC/BsB,KAAM,GACNgB,SAAW,IAHuB,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAbAC,qBAAU,WACNC,YAAW,WACP5B,EAASC,GACR4B,MAAK,SAAAC,GACFJ,EAAS,CACLlB,KAAOsB,EACPN,SAAU,SAGnB,OACJ,CAACvB,IAGGwB,EDhBkBM,CAAa9B,GAA/BO,EAF+B,EAE/BA,KAAMgB,EAFyB,EAEzBA,QAKb,OAHAP,QAAQC,IAAIV,GACZS,QAAQC,IAAIM,GAGR,oCACI,gCAAOvB,GACP,yBAAKkB,UAAW,aAERX,EAAKE,KAAK,SAAAC,GAAG,OACT,kBAAC,EAAD,eACIS,IAAMT,EAAIC,IACND,UEfnBqB,EAAe,WAAM,MAIM9C,mBAAS,CAAC,cAJhB,mBAIvB+C,EAJuB,KAIXhD,EAJW,KAU9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAcA,cAAeA,IAC7B,6BACA,4BAEQgD,EAAWvB,KAAI,SAAAT,GAAQ,OACvB,kBAAC,EAAD,CACQmB,IAAQnB,EACRA,SAAaA,U,MCjBzCiC,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.812e28dd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue (e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats =>[inputValue, ...cats])\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                type =\"text\"\r\n                placeholder=\"Nombre del Gif\"\r\n                value= {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired\r\n}","export const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=bPizIlzFH1H0UJ7QAGXosKiedxYNqRa1`;\r\n    const resp =  await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs =  data.map (img =>{\r\n        return {\r\n            id: img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log( {id, title, url});\r\n    return (\r\n        <div  className=\"card\">\r\n                <img \r\n                    key = {id}\r\n                    src = {url} \r\n                    alt = {title}\r\n                    title= {title}\r\n                />\r\n                <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category }) => {\r\n\r\n    const {data, loading}  = useFetchGifs(category);\r\n\r\n    console.log(data );\r\n    console.log(loading );\r\n\r\n    return (\r\n        <>\r\n            <h3> { category }</h3>\r\n            <div className =\"card-grid\">\r\n                {\r\n                    data.map( img => (\r\n                        <GifGridItem\r\n                            key= {img.id}\r\n                            {...img}\r\n                        >\r\n                        </GifGridItem>\r\n                    ))\r\n                    \r\n                }\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from  '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading :  true\r\n    })\r\n        \r\n    useEffect(()=>{\r\n        setTimeout(() => {\r\n            getGifs (category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data : imgs,\r\n                    loading : false\r\n                })\r\n            })\r\n        }, 2000);\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     setCategories([...categories, 'HunterXhunter']);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>gifExpertApp</h2>\r\n            <AddCategory  setCategories={setCategories} ></AddCategory>\r\n            <hr></hr>\r\n            <ol>\r\n                {\r\n                    categories.map(category =>(\r\n                    <GifGrid \r\n                            key = { category }\r\n                            category = { category }\r\n                        />   \r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom';\n\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp></GifExpertApp>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}